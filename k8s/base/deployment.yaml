apiVersion: apps/v1
kind: Deployment
metadata:
  name: yts-credit-scoring-app
  labels:
    team: yts-apps
    git.yolt.io/group: backend
    git.yolt.io/project: yts-credit-scoring-app
    git.yolt.io/tag: $(TAG)
    yolt.io/config-server-tag: $(CONFIG_SERVER_TAG)
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      name: yts-credit-scoring-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8444"
        prometheus.io/scheme: https
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-run-as-same-user: "true"
        vault.hashicorp.com/agent-revoke-on-shutdown: "true"
        vault.hashicorp.com/agent-revoke-grace: "185"
        vault.hashicorp.com/role: yts-credit-scoring-app
        vault.hashicorp.com/agent-cache-enable: "true"
        vault.hashicorp.com/agent-pre-populate: "true"
        vault.hashicorp.com/secret-volume-path: /vault/secrets
        vault.hashicorp.com/auth-path: "auth/$(ENVIRONMENT)/k8s/eks/pods/$(NAMESPACE)"
        vault.hashicorp.com/agent-limits-cpu: 1000m
        vault.hashicorp.com/agent-limits-mem: 128Mi
        vault.hashicorp.com/agent-requests-cpu: 10m
        vault.hashicorp.com/agent-requests-mem: 24Mi
        vault.hashicorp.com/agent-inject-secret-cert: ""
        vault.hashicorp.com/agent-inject-template-cert: |
          {{ with secret "$(ENVIRONMENT)/k8s/pods/$(NAMESPACE)/pki/issue/yts-credit-scoring-app" "common_name=yts-credit-scoring-app" }}
          {{- .Data.certificate -}}
          {{ end }}
        vault.hashicorp.com/agent-inject-secret-private_key: ""
        vault.hashicorp.com/agent-inject-template-private_key: |
          {{ with secret "$(ENVIRONMENT)/k8s/pods/$(NAMESPACE)/pki/issue/yts-credit-scoring-app" "common_name=yts-credit-scoring-app" }}
          {{- .Data.private_key -}}
          {{ end }}
        vault.hashicorp.com/agent-inject-secret-issuing_ca: ""
        vault.hashicorp.com/agent-inject-template-issuing_ca: |
          {{ with secret "$(ENVIRONMENT)/k8s/pods/$(NAMESPACE)/pki/issue/yts-credit-scoring-app" "common_name=yts-credit-scoring-app" }}
          {{- .Data.issuing_ca -}}
          {{ end }}
        vault.hashicorp.com/agent-inject-command-cert: openssl pkcs12 -export -in /vault/secrets/cert -inkey /vault/secrets/private_key -out /vault/secrets/keystore.p12 -name keystore -passout pass:dontchangeit
        vault.hashicorp.com/agent-inject-command-private_key: openssl pkcs12 -export -in /vault/secrets/cert -inkey /vault/secrets/private_key -out /vault/secrets/keystore.p12 -name keystore -passout pass:dontchangeit
        vault.hashicorp.com/client-max-retries: "4"
        vault.hashicorp.com/agent-inject-secret-rds: $(ENVIRONMENT)/database/rds/creds/yts-credit-scoring-app
        vault.hashicorp.com/agent-inject-secret-aws: aws
        vault.hashicorp.com/agent-inject-template-aws: |
          {{- with secret "aws/creds/$(ENVIRONMENT)-k8s-pod-email-sender" -}}
          [default]
          region=eu-central-1
          aws_access_key_id={{ .Data.access_key }}
          aws_secret_access_key={{ .Data.secret_key }}
          aws_session_token={{ .Data.security_token }}
          {{- end -}}
        ca-certificates.yolt.io/inject: "true"
      labels:
        team: yts-apps
        serving: "true"
    spec:
      containers:
        - env:
            - name: SPRING_CLOUD_CONFIG_ENABLED
              value: "true"
            - name: SPRING_PROFILES_ACTIVE
              value: $(ENVIRONMENT),$(NAMESPACE),$(ENVIRONMENT)-$(NAMESPACE)
            - name: SPRING_CLOUD_CONFIG_LABEL
              value: $(CONFIG_SERVER_TAG)
          image: $(DOCKER_REGISTRY)/yts-credit-scoring-app:$(DOCKER_TAG)
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - -c
                  - sleep 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8444
              scheme: HTTPS
            initialDelaySeconds: 180
            timeoutSeconds: 6
          name: yts-credit-scoring-app
          ports:
            - containerPort: 8443
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /actuator/health/readiness
              port: 8444
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 1
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 100
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      initContainers:
        - command:
            - sh
            - -c
            - until $(curl --connect-timeout 2 --output /dev/null --silent --head --fail https://config-server/config-server/actuator/health); do echo waiting for config-server; sleep 2; done;
          image: $(DOCKER_REGISTRY)/yts-credit-scoring-app:$(DOCKER_TAG)
          name: wait-for-config-server
          resources:
            limits:
              memory: 150Mi
            requests:
              memory: 50Mi
              cpu: 10m
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 100
      serviceAccountName: yts-credit-scoring-app
      terminationGracePeriodSeconds: 180
      volumes:
        - emptyDir: {}
          name: tmp-volume
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: name
                      operator: In
                      values:
                        - yts-credit-scoring-app
                topologyKey: topology.kubernetes.io/zone
